<macros xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.jackbe.com/2008-03-01/EMMLSchema/../src/schemas/EMMLSpec.xsd"
	xmlns="http://www.jackbe.com/2008-03-01/EMMLSchema" xmlns:macro="http://www.jackbe.com/2008-03-01/EMMLMacro"
	name="tail">

	<include file="count.emml-macros" />

	<macro name="FromBottom" xmlns:fn="java:com.jackbe.jbp.jems.client.EMMLPrestoFunctions">

		<emml-meta name="author">Mythri(mythri@jackbe.com)</emml-meta>

		<input name="nodes" type="number" />
		<input name="xmlDoc" type="document" />

		<!-- Truncated doc as per given inputs -->
		<output name="truncatedDoc" type="document" />

		<presto-meta name="macrotype">user</presto-meta>
		<presto-meta name="help">
			<description>Returns the last 'n' nodes in document order</description>
			<parameters>
				<parameter name="xmlDoc">Document from which nodes are to
					be extracted</parameter>
				<parameter name="nodes">Number of nodes required from the
					end of the input document</parameter>
			</parameters>
		</presto-meta>

		<!-- Get the repeating node from the given input xmlDoc -->
		<variables>
			<variable name="collectionroot" type="string" />
			<variable name="count" type="number" />
		</variables>
		
		<assign outputvariable="collectionroot" fromexpr="fn:infergroupXPath($xmlDoc)" />

		<macro:NodeCounter xmlDoc="$xmlDoc" tag="$collectionroot"
			outputvariable="count" />

		<if condition="not ($xmlDoc instance of xs:string or $xmlDoc=null)">
			<if condition="$collectionroot !='' ">
				<variable name="dynamicrecordexpr" type="string" />
				<template
					expr="{$collectionroot}[position() = {$count}-{$nodes}+1 to {$count}]"
					outputvariable="dynamicrecordexpr" />
				<filter inputvariable="xmlDoc" filterexpr="$dynamicrecordexpr"
					outputvariable="$truncatedDoc" />
			</if>
		</if>
	</macro>
</macros>
